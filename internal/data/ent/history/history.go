// Code generated by entc, DO NOT EDIT.

package history

import (
	"time"
)

const (
	// Label holds the string label denoting the history type in the database.
	Label = "history"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldDevice holds the string denoting the device field in the database.
	FieldDevice = "device"
	// FieldIP holds the string denoting the ip field in the database.
	FieldIP = "ip"
	// FieldCreatedAt holds the string denoting the createdat field in the database.
	FieldCreatedAt = "created_at"
	// EdgeVersion holds the string denoting the version edge name in mutations.
	EdgeVersion = "version"
	// Table holds the table name of the history in the database.
	Table = "histories"
	// VersionTable is the table that holds the version relation/edge. The primary key declared below.
	VersionTable = "version_histories"
	// VersionInverseTable is the table name for the Version entity.
	// It exists in this package in order to avoid circular dependency with the "version" package.
	VersionInverseTable = "versions"
)

// Columns holds all SQL columns for history fields.
var Columns = []string{
	FieldID,
	FieldDevice,
	FieldIP,
	FieldCreatedAt,
}

var (
	// VersionPrimaryKey and VersionColumn2 are the table columns denoting the
	// primary key for the version relation (M2M).
	VersionPrimaryKey = []string{"version_id", "history_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "createdAt" field.
	DefaultCreatedAt func() time.Time
)
