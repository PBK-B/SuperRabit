// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AppsColumns holds the columns for the "apps" table.
	AppsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "bundle_id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "logo", Type: field.TypeString},
		{Name: "latest_version", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// AppsTable holds the schema information for the "apps" table.
	AppsTable = &schema.Table{
		Name:       "apps",
		Columns:    AppsColumns,
		PrimaryKey: []*schema.Column{AppsColumns[0]},
	}
	// HistoriesColumns holds the columns for the "histories" table.
	HistoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "device", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "ip", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
	}
	// HistoriesTable holds the schema information for the "histories" table.
	HistoriesTable = &schema.Table{
		Name:       "histories",
		Columns:    HistoriesColumns,
		PrimaryKey: []*schema.Column{HistoriesColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
		{Name: "token", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// VersionsColumns holds the columns for the "versions" table.
	VersionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "version", Type: field.TypeString},
		{Name: "build", Type: field.TypeInt},
		{Name: "apk_size", Type: field.TypeFloat64, Nullable: true, Default: 0},
		{Name: "ipa_size", Type: field.TypeFloat64, Nullable: true, Default: 0},
		{Name: "ipa_url", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "apk_url", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "plist_url", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "description", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(1024)"}},
		{Name: "access", Type: field.TypeString, Nullable: true, Default: "public"},
		{Name: "access_code", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "status", Type: field.TypeInt, Nullable: true, Default: 3},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// VersionsTable holds the schema information for the "versions" table.
	VersionsTable = &schema.Table{
		Name:       "versions",
		Columns:    VersionsColumns,
		PrimaryKey: []*schema.Column{VersionsColumns[0]},
	}
	// AppVersionsColumns holds the columns for the "app_versions" table.
	AppVersionsColumns = []*schema.Column{
		{Name: "app_id", Type: field.TypeInt},
		{Name: "version_id", Type: field.TypeInt},
	}
	// AppVersionsTable holds the schema information for the "app_versions" table.
	AppVersionsTable = &schema.Table{
		Name:       "app_versions",
		Columns:    AppVersionsColumns,
		PrimaryKey: []*schema.Column{AppVersionsColumns[0], AppVersionsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "app_versions_app_id",
				Columns:    []*schema.Column{AppVersionsColumns[0]},
				RefColumns: []*schema.Column{AppsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "app_versions_version_id",
				Columns:    []*schema.Column{AppVersionsColumns[1]},
				RefColumns: []*schema.Column{VersionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserAppsColumns holds the columns for the "user_apps" table.
	UserAppsColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "app_id", Type: field.TypeInt},
	}
	// UserAppsTable holds the schema information for the "user_apps" table.
	UserAppsTable = &schema.Table{
		Name:       "user_apps",
		Columns:    UserAppsColumns,
		PrimaryKey: []*schema.Column{UserAppsColumns[0], UserAppsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_apps_user_id",
				Columns:    []*schema.Column{UserAppsColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_apps_app_id",
				Columns:    []*schema.Column{UserAppsColumns[1]},
				RefColumns: []*schema.Column{AppsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserVersionsColumns holds the columns for the "user_versions" table.
	UserVersionsColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "version_id", Type: field.TypeInt},
	}
	// UserVersionsTable holds the schema information for the "user_versions" table.
	UserVersionsTable = &schema.Table{
		Name:       "user_versions",
		Columns:    UserVersionsColumns,
		PrimaryKey: []*schema.Column{UserVersionsColumns[0], UserVersionsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_versions_user_id",
				Columns:    []*schema.Column{UserVersionsColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_versions_version_id",
				Columns:    []*schema.Column{UserVersionsColumns[1]},
				RefColumns: []*schema.Column{VersionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// VersionHistoriesColumns holds the columns for the "version_histories" table.
	VersionHistoriesColumns = []*schema.Column{
		{Name: "version_id", Type: field.TypeInt},
		{Name: "history_id", Type: field.TypeInt},
	}
	// VersionHistoriesTable holds the schema information for the "version_histories" table.
	VersionHistoriesTable = &schema.Table{
		Name:       "version_histories",
		Columns:    VersionHistoriesColumns,
		PrimaryKey: []*schema.Column{VersionHistoriesColumns[0], VersionHistoriesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "version_histories_version_id",
				Columns:    []*schema.Column{VersionHistoriesColumns[0]},
				RefColumns: []*schema.Column{VersionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "version_histories_history_id",
				Columns:    []*schema.Column{VersionHistoriesColumns[1]},
				RefColumns: []*schema.Column{HistoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AppsTable,
		HistoriesTable,
		UsersTable,
		VersionsTable,
		AppVersionsTable,
		UserAppsTable,
		UserVersionsTable,
		VersionHistoriesTable,
	}
)

func init() {
	AppVersionsTable.ForeignKeys[0].RefTable = AppsTable
	AppVersionsTable.ForeignKeys[1].RefTable = VersionsTable
	UserAppsTable.ForeignKeys[0].RefTable = UsersTable
	UserAppsTable.ForeignKeys[1].RefTable = AppsTable
	UserVersionsTable.ForeignKeys[0].RefTable = UsersTable
	UserVersionsTable.ForeignKeys[1].RefTable = VersionsTable
	VersionHistoriesTable.ForeignKeys[0].RefTable = VersionsTable
	VersionHistoriesTable.ForeignKeys[1].RefTable = HistoriesTable
}
