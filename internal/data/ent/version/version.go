// Code generated by entc, DO NOT EDIT.

package version

import (
	"time"
)

const (
	// Label holds the string label denoting the version type in the database.
	Label = "version"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldVersion holds the string denoting the version field in the database.
	FieldVersion = "version"
	// FieldBuild holds the string denoting the build field in the database.
	FieldBuild = "build"
	// FieldApkSize holds the string denoting the apk_size field in the database.
	FieldApkSize = "apk_size"
	// FieldIpaSize holds the string denoting the ipa_size field in the database.
	FieldIpaSize = "ipa_size"
	// FieldIpaURL holds the string denoting the ipa_url field in the database.
	FieldIpaURL = "ipa_url"
	// FieldApkURL holds the string denoting the apk_url field in the database.
	FieldApkURL = "apk_url"
	// FieldPlistURL holds the string denoting the plist_url field in the database.
	FieldPlistURL = "plist_url"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldAccess holds the string denoting the access field in the database.
	FieldAccess = "access"
	// FieldAccessCode holds the string denoting the access_code field in the database.
	FieldAccessCode = "access_code"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldCreatedAt holds the string denoting the createdat field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updatedat field in the database.
	FieldUpdatedAt = "updated_at"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// EdgeApp holds the string denoting the app edge name in mutations.
	EdgeApp = "app"
	// EdgeHistories holds the string denoting the histories edge name in mutations.
	EdgeHistories = "histories"
	// Table holds the table name of the version in the database.
	Table = "versions"
	// UserTable is the table that holds the user relation/edge. The primary key declared below.
	UserTable = "user_versions"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// AppTable is the table that holds the app relation/edge. The primary key declared below.
	AppTable = "app_versions"
	// AppInverseTable is the table name for the App entity.
	// It exists in this package in order to avoid circular dependency with the "app" package.
	AppInverseTable = "apps"
	// HistoriesTable is the table that holds the histories relation/edge. The primary key declared below.
	HistoriesTable = "version_histories"
	// HistoriesInverseTable is the table name for the History entity.
	// It exists in this package in order to avoid circular dependency with the "history" package.
	HistoriesInverseTable = "histories"
)

// Columns holds all SQL columns for version fields.
var Columns = []string{
	FieldID,
	FieldVersion,
	FieldBuild,
	FieldApkSize,
	FieldIpaSize,
	FieldIpaURL,
	FieldApkURL,
	FieldPlistURL,
	FieldDescription,
	FieldAccess,
	FieldAccessCode,
	FieldStatus,
	FieldCreatedAt,
	FieldUpdatedAt,
}

var (
	// UserPrimaryKey and UserColumn2 are the table columns denoting the
	// primary key for the user relation (M2M).
	UserPrimaryKey = []string{"user_id", "version_id"}
	// AppPrimaryKey and AppColumn2 are the table columns denoting the
	// primary key for the app relation (M2M).
	AppPrimaryKey = []string{"app_id", "version_id"}
	// HistoriesPrimaryKey and HistoriesColumn2 are the table columns denoting the
	// primary key for the histories relation (M2M).
	HistoriesPrimaryKey = []string{"version_id", "history_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultApkSize holds the default value on creation for the "apk_size" field.
	DefaultApkSize float64
	// DefaultIpaSize holds the default value on creation for the "ipa_size" field.
	DefaultIpaSize float64
	// DefaultIpaURL holds the default value on creation for the "ipa_url" field.
	DefaultIpaURL string
	// DefaultApkURL holds the default value on creation for the "apk_url" field.
	DefaultApkURL string
	// DefaultPlistURL holds the default value on creation for the "plist_url" field.
	DefaultPlistURL string
	// DefaultDescription holds the default value on creation for the "description" field.
	DefaultDescription string
	// DefaultAccess holds the default value on creation for the "access" field.
	DefaultAccess string
	// DefaultAccessCode holds the default value on creation for the "access_code" field.
	DefaultAccessCode string
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus int
	// DefaultCreatedAt holds the default value on creation for the "createdAt" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updatedAt" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updatedAt" field.
	UpdateDefaultUpdatedAt func() time.Time
)
